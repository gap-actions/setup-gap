name: 'Setup GAP for package testing'
description: 'Download and compile CI scripts, GAP and its packages'
inputs:
  GAP_PKGS_TO_CLONE:
    description: 'the GAP packages to clone'
    required: false
    default: ''
  GAP_PKGS_TO_BUILD:
    description: 'the GAP packages to build'
    required: false
    default: 'io profiling'
  GAPBRANCH:
    description: 'the gap branch to clone'
    required: false
    default: 'master'
  HPCGAP:
    description: 'build HPC-GAP if set to yes'
    required: false
    default: 'no'
  ABI:
    description: 'set to 32 to use 32bit build flags for the package'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
      - name: "Download CI scripts"
        run:  git clone https://github.com/gap-system/pkg-ci-scripts.git
        shell: bash
      - name: "Install dependencies"
        run: |
          echo "Installing dependencies"
          if [ "${{runner.os}}" = "Linux" ]; then
            if [ "${{inputs.ABI}}" = "32" ]; then
              sudo dpkg --add-architecture i386
              sudo apt-get update
              packages=(
                libgmp-dev:i386
                libreadline-dev:i386
                zlib1g-dev:i386
                gcc-multilib
                g++-multilib
              )
            else
              packages=(
                libgmp-dev
                libreadline-dev
                zlib1g-dev
              )
            fi
            sudo apt-get install "${packages[@]}"
          elif [ "${{runner.os}}" = "macOS" ]; then
            if [ "${{inputs.ABI}}" = "32" ]; then
              echo "Can't use macOS with 32bit!"
              exit 1
            fi
            brew install gmp zlib && brew link zlib
          fi
        shell: bash
      - name: "Compile GAP and download packages"
        run: |
          # Handle GAP_PKGS_TO_BUILD default value
          if [ "${{inputs.GAP_PKGS_TO_BUILD}}" = "default" ];
          then
            export GAP_PKGS_TO_BUILD="io profiling"
          else
            export GAP_PKGS_TO_BUILD="${{inputs.GAP_PKGS_TO_BUILD}}"
          fi
          pkg-ci-scripts/build_gap.sh
        env:
          ABI: ${{ inputs.ABI }}
          GAP_PKGS_TO_CLONE: ${{ inputs.GAP_PKGS_TO_CLONE }}
          GAPBRANCH: ${{ inputs.GAPBRANCH }}
          HPCGAP: ${{ inputs.HPCGAP }}
        shell: bash
